[["index.html", "repocoを使うための準備について Chapter 1 はじめに", " repocoを使うための準備について 福田俊介 2021-04-20 Chapter 1 はじめに Rパッケージ「repoco」は、retiパッケージ経由で取り込んだ不動産取引価格情報のデータをレポートとして纏め、pdf形式のファイルで出力するツール集として開発しています。 https://github.com/rea-osaka/repoco ここで、pdfファイル出力のために、TeXと呼ばれる組版処理システムを利用しており、このTexがシステムに無いと、Rパッケージ「repoco」をインストールしてもレポートの出力が出来ません。 一方、このTeXのシステムをインストールしておけば、 「repoco」に限らず、Rmarkdownで、いつでもpdfのレポートを作ることが出来るようになります。 そこで、まず、WindowsにTeXのシステムをインストールする方法を紹介します。 ここでは、既にRやRStuidoのインストールがなされており、 RStudioを触った事があり、パッケージのインストールも自分で出来る事を前提にしています。 もし、まだ、RStudio等が未経験ならば、以下の文書を参考にしてください。 初心者向けRのインストールガイド Rビギナーズガイド パッケージについては、データ分析に必須と言われているtidyverseのパッケージ群だけでなく、rmarkdownパッケージも事前にインストールしておいて下さい。 更に、githubから、reti、retiex、repocoのパッケージをこの順にひとつづつ順にインストールしておいて下さい。 # retiのインストール devtools::install_github(&quot;rea-osaka/reti&quot;) # retiexのインストール devtools::install_github(&quot;rea-osaka/retiex&quot;) # retiのインストール devtools::install_github(&quot;rea-osaka/repoco&quot;) "],["texシステムインストールの概略.html", "Chapter 2 TeXシステムインストールの概略 2.1 作業の流れ 2.2 注意すべき事項", " Chapter 2 TeXシステムインストールの概略 TeXと呼ばれる組版処理システムは、専門性の高い複雑なシステムなので、 使いこなすためには専門的な知識の勉強が必要となります。 しかし、Rと連携して用いられるRmarkdownを使った レポート作成システム としてTeXを利用する場合には、 TeX自体の専門的な知識はほとんど必要ありません。 また、RmarkdownからのみしかTeXを利用しない人のために開発されている 「tinytex」というTeXを管理するためのRパッケージがあるので、 TeXの管理についてもほとんど知識は必要ありません。 さて、ここでTeXシステムのインストールと言っていますが、 TeX以外でTeXに密接に関連するもののインストールや設定も行います。 ですから、正確には、RでRmarkdownパッケージを使ってpdf出力をするために 必要な設定を行います。そして、これらの設定作業を行うことで、 このRmarkdownを利用して作られているrepocoパッケージも動くようになります。 2.1 作業の流れ これから行う設定作業は、 幾つかの作業を行わなければならないので、 何の作業をどういう順序で行うのか整理して理解しやすいように、 まず、具体的な作業の概略を以下に述べておきます。 RパッケージtinytexをRにインストール インストールされたtinytexの関数を使って、R上でtexをインストール ghostscriptと呼ばれるプログラムをウィンドウズにインストール ウィンドウズの環境変数pathにインストールされたghostscriptのbinとlibディレクトリを追加する R上でtinytexを使って、texのパッケージをインストールする。 以上で、R上でrmarkdownを使ってpdf出力が出来るようになります。 そして、repocoも動くようになります。 2.2 注意すべき事項 ここで紹介しているインストール作業は、 全て、インターネット上で公開されているパッケージをインストールして行います。 ですから、作業の最中は、常にインターネットに接続している必要があります。 また、インストールの作業は思った以上の時間がかかる事があります、 コンソールでインストール作業が行われている場合、 プロンプトがすぐに戻ってこなくても、不具合ではありません。 長いときには表示が止まったままで数分掛かることもあることを頭に入れておきましょう。 "],["tinytexパッケージ.html", "Chapter 3 tinytexパッケージ 3.1 パッケージのインストール 3.2 TeXのインストール", " Chapter 3 tinytexパッケージ tinytexはRのパッケージです。 tinytexは、Rmarkdownの作者の一人Yihui Xieさんが開発していて、 TinyTeXでドキュメントを公開しています。興味のある方は、そちらのほうも目を通してみてください。 3.1 パッケージのインストール ここではまずは、このtinytexパッケージをRにインストールします。 RStudio等からRのプロンプトで、次のコマンドを実行します。 install.packages(&quot;tinytex&quot;) tinytexパッケージのインストールはすぐに終わります。 3.2 TeXのインストール tinytexパッケージに含まれる関数を使い TeXのインストールをRStudio等のRのプロンプトから行います。 tinytex::install_tinytex() このコマンド名intall_tinytex()にあるtinytexは、 Rパッケージのtinytexを指しているのではなく、TeXディストリビューションとしてのtinytexを指しています。ですから、「さっきも、tinytexをインストールしたはずなのにまたインストールするの？」と不安にならなくても大丈夫です。 ダウンロードと、そのインストールはしばらく時間が掛かります。 インストールが終了して、コンソールのプロンプトが戻ってきたら、 一旦、RStudioを終了し、それから次の作業へ進みます。 "],["ghostscriptを設定する.html", "Chapter 4 ghostscriptを設定する 4.1 インストール 4.2 他のプログラムから利用する設定", " Chapter 4 ghostscriptを設定する ghostscriptは、 pdfを扱うのに必要となるプログラムで、 texシステムから呼ばれて使われます。 そこで、ここでの作業は、 まず、ghostscriptをインストールし、 次に、インストールされたghostscriptを、 他のプログラム（TeX等）から利用できるようにする設定を行います。 4.1 インストール ghostscriptのサイトにある、ダウンロードページからwindows用のインストールファイルをダウンロードします。 https://www.ghostscript.com/download/gsdnld.html ページの表にある「Ghostscript X.XX.X for Windows (64 bit)」項目の右側の どちらか相応しい方のライセンスを選んで、 ダウンロードしてください。 インストールファイルがダウンロード出来たら、 そのファイルをダブルクリックしてインストーラーを起動、 デフォルトでインストールして下さい。 4.2 他のプログラムから利用する設定 ghostscriptを他のプログラムから利用するため、 Windowsの環境変数pathに、今インストールした、ghostscriptの中にある、 binディレクトリとlibディレクトリを追加する設定を行います。 まず、ghostscriptがインストールされている場所を確認します。 デフォルトでインストールするとCドライブの中のProgram Filesディレクトリにgsというディレクトリが作られ、 その中にバージョン付きのディレクトリが作成されてインストールされています。 Figure 4.1: gsのインストール先 ウィンドウズのファイルエクスプローラー等を利用して、 その場所を確認してください。 C:\\Program Files\\gs\\gs.9.54.0というパスの中にbinというディレクトリと libというディレクトリがあることを確認します。 4.2.1 システムのプロパティダイアログを検索して開く 環境変数は、windowsの「システムのプロパティダイアログ」から行います。 ウィンドウズのデスクトップ左下のウィンドウズマーク（メニューを開くところ） の隣に、虫眼鏡のマークがあるのでそこをクリックします。 あらわれた検索用のメニューの「ここに入力して検索」と書かれている部分に「システム環境変数」と入力します。 そうすると、検索結果に「システム環境変数の編集コントロールパネル」と表示されるのでそこをクリックしてください。 Figure 4.2: 検索窓 4.2.2 システムのプロパティダイアログ システムのプロパティダイアログが開かれます。 そのダイアログの下の方にある「環境変数」ボタンをクリックします。 Figure 4.3: システムのプロパティ 4.2.3 環境変数ダイアログ 環境変数ダイアログが開かれます。 これを使って、環境変数Pathの設定を行います。 まず、上側にあるユーザー環境変数の一覧の「Path」の行をクリックすると、 色がついて選択された状態になります。 選択したら、すぐ下の「編集」ボタンをクリックします。 Figure 4.4: 環境変数ダイアログ 4.2.4 環境変数名の編集ダイアログ 環境変数名の編集というダイアログが開いて、登録されているパスの一覧が表示されます。 環境変数Pathの編集を行うとき、既に登録されているPathを消してしまうと、 Windowsがコマンドをうまく探せなくなる不具合が発生します。 間違って編集してしまっても元に戻せるように、 パスの一覧等をスクリーンショットやスマホの写真等で撮っておきましょう。 また、各内容を編集した後OKボタンを押さなければ、反映されないので、 不安になったら、「キャンセル」ボタンを押して、最初からやり直せばOKです。 逆に、編集後は、必ず「OK」ボタンを押し忘れないようにしましょう。 編集内容が反映されません。 ここに、先に見た、ghostscriptのインストールされたディレクトリ内にある、binディレクトリと、libディレクトリを登録します。 まずは、右側の「新規」ボタンを押すと、行の一番下が入力可能になります。 その状態で、右側の「参照」ボタンを押します。 Figure 4.5: 環境変数名の編集ダイアログ 4.2.5 フォルダの参照ダイアログでbinディレクトリを探す フォルダの参照ダイアログが現れるので、 これを使って、ghostscriptがインストールされたディレクトリ内の binディレクトリを探します。 「PC」の中の「Windws(C:)」から辿ってみましょう。 みつけたら、そのbinディレクトりをクリックして選択します。 選択したら、下にある「OK」ボタンをクリックします。 Figure 4.6: フォルダの参照 binディレクトリをPathに登録できたら、 もう一度、chapter 4.2.4 から初めて、libディレクトリを同様に登録します。 最終的に次のようになります。 Figure 4.7: gsのPathへの登録完了 作業が完了したら「OK」ボタンをクリックして、内容を反映させます。 更に、Windowsのアプリを全部終了し、一旦、Windowsを再起動して下さい。ね "],["texパッケージのインストール.html", "Chapter 5 TeXパッケージのインストール 5.1 TeXパッケージをコマンドでインストール 5.2 rmarkdownファイルをKnitする 5.3 repocoを使う", " Chapter 5 TeXパッケージのインストール TeXもRと同様に、沢山のパッケージとともに利用されます。 ここでは、rmarkdownを利用したpdf出力で 必須のパッケージをインストールします。 5.1 TeXパッケージをコマンドでインストール RStudio等を開いて、Rのコンソールを開いて下さい。 次のコマンドをRのプロンプトから実行します。 5.1.1 pdfcropパッケージのインストール tinytex::tlmgr_install(&quot;pdfcrop&quot;) tlmgr_install()コマンドはTeXのパッケージをCTANと呼ばれる公開先からインストールしてくれるRのコマンドです。 インストールしたいTeXのパッケージを引数として渡します。 ここでは、TeXのpdfcropパッケージをインストールするので、 \"pdfcrop\"を引数として渡しています。 5.1.2 ipaexのインストール 次は、TeXで利用される日本語フォントパッケージのインストールです。 次のコマンドをRのプロンプトに渡して実行しましょう。 tinytex::tlmgr_install(&quot;ipaex&quot;) 5.2 rmarkdownファイルをKnitする 上記以外のTeXパッケージは、 tinytex自体が必要に応じて大体自動的にインストールしてくれます。 今から実際にpdfの作成を行いますが、 pdfの作成には関連する一時ファイルが沢山作成されて、 作業場所が散らかるので、 空のディレクトリを用意し、そこにRStudioでプロジェクトを作って下さい。 準備が出来たら、その新しいプロジェクトを開き、 RStudioのメニューから「File」＞「New File」＞「R Markdown」を選択して下さい。 ダイアログが現れるので、次のようにpdfを選びます。 Figure 5.1: New R Markdown File 新しいファイルが編集領域に現れたら、 そのファイルのはじめの---で囲まれた部分のうち、 output:の行以下を次のように書き換えます。 それ以外のtitle:やauthorの行は、そのままでOKです。 --- title: &quot;Untitled&quot; author: &quot;Nekota&quot; output: pdf_document: latex_engine: xelatex documentclass: bxjsbook classoption: xelatex, ja=standard --- 次に、もう少し下の方にある本文の中の## R Markdownと書かれた行の次の行に、 「日本語です」と、日本語を書き込みます。 作業が終わったら、編集領域の上にある「Knit」ボタンを押します。 Figure 5.2: RStudio 「Knit」ボタンを押すと、rmarkdown ファイルの中の、 Rコードが処理され、その出力結果がそれ以外の部分と統合されて 単なるmarkdownファイルとなり、 そのmarkdownファイルが、ここではTeXの処理でpdfファイルに変換されます。 このTeXの処理が開始されると、 システムにないTeXのパッケージをtinytexが自動的に インストールしてくれます。 ここでは、幾つかのパッケージがインストールされるので、 コンソールにプロンプトが戻るまで、しばらく時間が掛かります。 全ての処理が終わると、プロジェクト内にpdfファイルが出来ているはずです。 5.3 repocoを使う RStudio付属のrmarkdownのテンプレートを処理することで、 幾つかのTeXパッケージが自動的にインストールされました。 ここまでの準備が整うと、 repocoパッケージの関数を呼び出すことが出来るようになります。 ですから、次は実際にrepocoパッケージの関数で実際にレポートを作成します。 しかし、このとき、更に、必要なTeXパッケージが自動的に読み込まれます。 5.3.1 retiでデータを読み込む retiパッケージを使って、 国土交通省が公表する不動産取引価格情報の csvファイルからデータを読み込みます。 retiについては、以下を参考にして下さい。 Welcome to the reti wiki! 大阪府に関する不動産取引価格情報のcsvファイルをosaka.csvとして保存したとして、 枚方市に関する土地と建物の一体取引のうち、 2017年以降のデータを取り出すRのコードを例示すれば以下のようになります。 library(tidyverse) library(reti) hirakata &lt;- reti_read_LB(&quot;osaka.csv&quot;) %&gt;% reti_filter_by_city(&quot;枚方市&quot;) %&gt;% filter(t_year &gt;= 2017) このhirakataデータをrepocoパッケケージのnewhouse_quarter_report()関数に渡す事で、pdf形式のレポートを出力してくれます。 library(repoco) newhouse_quarter_report(hirakata) 関数が実行されると自動的に処理が行われます。 しばらくすると、内部で自動的にTeXパッケージが読み込まれている様子が 表示されます。 かなりの数のパッケージがインストールされるので、 少し時間がかかりますが、ゆっくり待ちましょう。 プロンプトが戻ると、カレントディレクトリにnew_house_quarter_report.pdfというファイルが作成されているはずです。 5.3.2 最後に 以上の作業を終えると、rmarkdownでpdfの出力が出来るようになっています。 また、TeXのパッケージのインストールは、一回だけです。 次回からのレポート処理は、インストール作業はないので、 その時間はかからなくなります。 但し、TeXの処理は膨大な計算を行うので、 大きな文書を処理する場合、少し時間が掛かります。 その分、綺麗に文書を作ってくれるので、イライラせずに使いましょう。 "]]
